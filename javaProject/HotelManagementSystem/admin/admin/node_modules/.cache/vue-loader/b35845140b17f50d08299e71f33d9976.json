{"remainingRequest":"D:\\DaSanShang\\DatabaseDesign\\springbootlvtr5\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DaSanShang\\DatabaseDesign\\springbootlvtr5\\src\\main\\resources\\admin\\admin\\src\\views\\modules\\jingdianxinxi\\list.vue?vue&type=template&id=4c99ccea&scoped=true&","dependencies":[{"path":"D:\\DaSanShang\\DatabaseDesign\\springbootlvtr5\\src\\main\\resources\\admin\\admin\\src\\views\\modules\\jingdianxinxi\\list.vue","mtime":1660271334964},{"path":"D:\\DaSanShang\\DatabaseDesign\\springbootlvtr5\\src\\main\\resources\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DaSanShang\\DatabaseDesign\\springbootlvtr5\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\DaSanShang\\DatabaseDesign\\springbootlvtr5\\src\\main\\resources\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DaSanShang\\DatabaseDesign\\springbootlvtr5\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}